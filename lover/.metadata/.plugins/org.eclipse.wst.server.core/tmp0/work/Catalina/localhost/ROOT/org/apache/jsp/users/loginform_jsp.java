/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.83
 * Generated at: 2023-12-18 08:44:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.users;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class loginform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1702876508000L));
    _jspx_dependants.put("jar:file:/C:/final/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/final/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fmt.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/final/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/final/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"../resources/css/login.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<script>\r\n");
      out.write("     function goToSignUpPage() {\r\n");
      out.write("    	//회원 가입 폼으로 이동\r\n");
      out.write("        window.location.href = \"joinform.do\";\r\n");
      out.write("        }\r\n");
      out.write("     \r\n");
      out.write("    function validateForm() {\r\n");
      out.write("        var username = document.querySelector('.input[type=\"text\"]').value;\r\n");
      out.write("        var password = document.querySelector('.input[type=\"password\"]').value;\r\n");
      out.write("        var confirmPassword = document.querySelector('.input[type=\"password\"]').value;\r\n");
      out.write("\r\n");
      out.write("        if (username.trim() === '') {\r\n");
      out.write("            alert(\"아이디를 입력하세요.\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        var usernameRegex = /^[a-zA-Z0-9]+$/;\r\n");
      out.write("        if (!usernameRegex.test(username)) {\r\n");
      out.write("            alert(\"아이디는 숫자 또는 영어로 입력해 주세요.\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        if (password.trim() === '') {\r\n");
      out.write("            alert(\"비밀번호를 입력하세요.\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        if (password !== confirmPassword) {\r\n");
      out.write("            alert(\"비밀번호가 일치하지 않습니다. 다시 입력해주세요.\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        return true; // 모든 유효성 검사를 통과하면 true 반환\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"login-form\">\r\n");
      out.write("        <form action=\"/login.do\" method=\"post\" onsubmit=\"return validateForm()\">\r\n");
      out.write("            <h3>로그인<a href=\"adminlogin.jsp\" id=\"adminlogin\">.</a></h3>\r\n");
      out.write("            <label for=\"id\">\r\n");
      out.write("                <p class=\"label-txt\">아이디</p>\r\n");
      out.write("                <input type=\"text\" class=\"input\" id=\"id\" name=\"id\" required>\r\n");
      out.write("                <div class=\"line-box\">\r\n");
      out.write("                    <div class=\"line\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </label>\r\n");
      out.write("            <label for=\"passwd\">\r\n");
      out.write("                <p class=\"label-txt\">비밀번호</p>\r\n");
      out.write("                <input type=\"password\" class=\"input\" id=\"passwd\" name=\"passwd\" required>\r\n");
      out.write("                <div class=\"line-box\">\r\n");
      out.write("                    <div class=\"line\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </label>\r\n");
      out.write("            <div class=\"error\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${error}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\r\n");
      out.write("            <button type=\"submit\" id=\"login_button\" onclick=\"validateForm()\">로그인</button>\r\n");
      out.write("            <button type=\"button\" id=\"signup_button\" onclick=\"goToSignUpPage()\">회원가입</button>\r\n");
      out.write("            <div class=\"na\">\r\n");
      out.write("                <ul>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <p>아이디 찾기</p>\r\n");
      out.write("                        <p>|</p>\r\n");
      out.write("                        <p>비밀번호 찾기</p>\r\n");
      out.write("                    </li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
