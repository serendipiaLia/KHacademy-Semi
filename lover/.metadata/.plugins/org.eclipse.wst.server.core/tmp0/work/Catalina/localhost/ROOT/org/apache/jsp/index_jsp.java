/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.83
 * Generated at: 2023-12-18 08:43:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\" class=\"no-js\">\r\n");
      out.write("<head>\r\n");
      out.write("    <title>놀랭 : Nollaeng</title>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"resources/css/index.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"resources/css/open.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"post_inc/bootstrap/animate.min.css\">\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.6.4.min.js\"></script>\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("    <script src=\"../resources/js/login.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <body>\r\n");
      out.write("    <!-- 로그인 모달 -->\r\n");
      out.write("    <div id=\"loginModal\" class=\"modal fade\">\r\n");
      out.write("      <div class=\"modal-dialog\">\r\n");
      out.write("            <div class=\"modal-content\">\r\n");
      out.write("                <span class=\"close\" id=\"closeModal\">&times;</span>\r\n");
      out.write("                <div class=\"login-form\"> <!-- 로그인 폼을 감싸는 div 추가 -->\r\n");
      out.write("                    <h3>로그인</h3>\r\n");
      out.write("                    <form>\r\n");
      out.write("                        <label>\r\n");
      out.write("                            <p class=\"label-txt\">아이디</p>\r\n");
      out.write("                            <input type=\"text\" class=\"input\">\r\n");
      out.write("                            <div class=\"line-box\">\r\n");
      out.write("                                <div class=\"line\"></div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </label>\r\n");
      out.write("                        <label>\r\n");
      out.write("                           <p class=\"label-txt\">비밀번호</p>\r\n");
      out.write("                           <input type=\"password\" class=\"input\">\r\n");
      out.write("                           <div class=\"line-box\">\r\n");
      out.write("                           <div class=\"line\"></div>\r\n");
      out.write("                           </div>\r\n");
      out.write("                        </label>\r\n");
      out.write("                        <button type=\"submit\" id=\"login_button\">로그인</button>\r\n");
      out.write("                        <button type=\"button\" id=\"signup_button\">회원가입</button>\r\n");
      out.write("                        <div class=\"na\">\r\n");
      out.write("                           <ul>\r\n");
      out.write("                              <li>\r\n");
      out.write("                                 <p>아이디 찾기</p>\r\n");
      out.write("                                 <p>|</p>\r\n");
      out.write("                                 <p>비밀번호 찾기</p>\r\n");
      out.write("                              </li>\r\n");
      out.write("                           </ul>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <!-- 회원가입 폼 -->\r\n");
      out.write("                <div id=\"signupForm\" class=\"signup-form\"> <!-- 회원가입 폼을 감싸는 div 추가 -->\r\n");
      out.write("                    <h3>회원가입</h3>\r\n");
      out.write("                    <form>\r\n");
      out.write("                     <label>\r\n");
      out.write("                        <p class=\"label-txt\">아이디</p>\r\n");
      out.write("                        <input type=\"text\" class=\"input\" placeholder=\"영문 소문자, 숫자 5~20자의 아이디를 입력해주세요.\"> \r\n");
      out.write("                        <div class=\"line-box\">\r\n");
      out.write("                           <div class=\"line\"></div>\r\n");
      out.write("                        </div> \r\n");
      out.write("                     </label>\r\n");
      out.write("                     <label>\r\n");
      out.write("                        <p class=\"label-txt\">비밀번호</p>\r\n");
      out.write("                        <input type=\"email\" class=\"input\" placeholder=\"영문, 숫자를 포함한 8자 이상의 비밀번호를 입력해주세요.\">\r\n");
      out.write("                        <div class=\"line-box\">\r\n");
      out.write("                           <div class=\"line\"></div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                     </label>\r\n");
      out.write("                     <label>\r\n");
      out.write("                        <p class=\"label-txt\">이름</p>\r\n");
      out.write("                        <input type=\"password\" class=\"input\" placeholder=\"하이픈(-)을 제외한 숫자 10~11자를 입력해주세요.\">\r\n");
      out.write("                        <div class=\"line-box\">\r\n");
      out.write("                           <div class=\"line\"></div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                     </label>\r\n");
      out.write("                     <label>\r\n");
      out.write("                        <p class=\"label-txt\">연락처</p>\r\n");
      out.write("                        <input type=\"password\" class=\"input\">\r\n");
      out.write("                        <div class=\"line-box\">\r\n");
      out.write("                           <div class=\"line\"></div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                     </label>\r\n");
      out.write("                     <label>\r\n");
      out.write("                        <p class=\"label-txt\">주소</p>\r\n");
      out.write("                        <input type=\"password\" class=\"input\" placeholder=\"Ex. 서울특별시 영등포구 선유동2로 57\">\r\n");
      out.write("                        <div class=\"line-box\">\r\n");
      out.write("                           <div class=\"line\"></div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                     </label>\r\n");
      out.write("                     <button type=\"button\" id=\"signup_button_submit\">가입하기</button>\r\n");
      out.write("                     <button type=\"button\" id=\"back_button\">홈으로</button>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div id=\"container\">\r\n");
      out.write("        <section id=\"home\">\r\n");
      out.write("            <div id=\"logo\">\r\n");
      out.write("                <a href=\"main.jsp\">\r\n");
      out.write("                    <img src=\"resources/images/nollaeng1_white.png\" alt=\"Logo\" id=\"logo\"></a>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Updated login_logo div with onclick attribute -->\r\n");
      out.write("            <div id=\"login_logo\" onclick=\"openModal()\">\r\n");
      out.write("                <img src=\"resources/images/login_icon_white.png\" alt=\"로그인 로고\" id=\"login_logo\">\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div id=\"caption\">\r\n");
      out.write("                <h1>Enjoy With Us Nollaeng <br> 놀랭에서 즐겨 보세요!</h1>\r\n");
      out.write("                <p>다양한 장소, 이벤트, 소식을 찾아보세요. <br> 가장 특별한 시간을 간직할 수 있게 해드릴게요. </p>\r\n");
      out.write("                <a href=\"main.jsp\" class=\"default-button scroll-btn btn-open\">Let's Go</a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </section>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- 스크립트 부분 -->\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.6.4.min.js\"></script>\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("        // 모달 열기\r\n");
      out.write("        function openModal() {\r\n");
      out.write("            $('#loginModal').modal('show');\r\n");
      out.write("            var animates = {\r\n");
      out.write("                1: 'animated zoomIn',\r\n");
      out.write("                2: 'animated flipInX',\r\n");
      out.write("                3: 'animated rotateIn',\r\n");
      out.write("                4: 'animated bounceIn',\r\n");
      out.write("                5: 'animated lightSpeedIn',\r\n");
      out.write("                6: 'animated slideInDown'\r\n");
      out.write("            };\r\n");
      out.write("            var select_num = Math.floor((Math.random() * 6) + 1);\r\n");
      out.write("            $('.modal-content').removeClass().addClass('modal-content ' + animates[select_num]);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // 모달 닫기 함수\r\n");
      out.write("        function closeModal() {\r\n");
      out.write("            $('#loginModal').modal('hide');\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Close 버튼 클릭 시 모달 닫기\r\n");
      out.write("        $('#closeModal').click(function () {\r\n");
      out.write("            closeModal();\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // 모달이 닫힐 때 이벤트 처리\r\n");
      out.write("        $('#loginModal').on('hidden.bs.modal', function () {\r\n");
      out.write("            // 로그인 폼 초기화 및 보이기\r\n");
      out.write("            $('.login-form').show();\r\n");
      out.write("            // 회원가입 폼 초기화 및 숨김\r\n");
      out.write("            $('#signupForm').hide();\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        $('#signup_button').click(function () {\r\n");
      out.write("            // 현재 표시 중인 로그인 폼 숨기기\r\n");
      out.write("            $('.login-form').hide();\r\n");
      out.write("            // 회원가입 폼 보이기\r\n");
      out.write("            $('#signupForm').show();\r\n");
      out.write("            // 모달 크기 조절\r\n");
      out.write("            $('#loginModal').css('height', '677px'); // 원하는 크기로 조절\r\n");
      out.write("            // 외부 클릭 시 닫히도록 설정\r\n");
      out.write("            $('#loginModal').off('click.dismiss.bs.modal');\r\n");
      out.write("         });\r\n");
      out.write("\r\n");
      out.write("        // 회원가입 폼의 가입하기 버튼 클릭 시 이벤트 처리\r\n");
      out.write("        $('#signup_button_submit').click(function () {\r\n");
      out.write("            // 여기에 회원가입 폼 제출 로직을 추가하세요.\r\n");
      out.write("            alert('가입이 완료되었습니다.');\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // 홈으로 버튼 클릭 시 이벤트 처리\r\n");
      out.write("        $('#back_button').click(function () {\r\n");
      out.write("            // 모달 닫기\r\n");
      out.write("            closeModal();\r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("      // 모달이 닫힐 때 이벤트 처리\r\n");
      out.write("      $('#loginModal').on('hidden.bs.modal', function () {  \r\n");
      out.write("         // 로그인 폼 초기화 및 보이기\r\n");
      out.write("         $('.login-form').show();\r\n");
      out.write("         // 회원가입 폼 초기화 및 숨김\r\n");
      out.write("         $('#signupForm').hide();\r\n");
      out.write("         // 모달 크기 초기화\r\n");
      out.write("         $('#loginModal').css('height', '400px'); // 초기 크기로 복원\r\n");
      out.write("      });\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
